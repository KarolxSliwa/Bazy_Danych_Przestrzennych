Komendy początkowe :



raster2pgsql.exe -s 3763 -N -32767 -t 100x100 -I -C -M -d "C:\Users\Karol\Desktop\IiAD\Semestr_7\Bazy_Danych_Przestrzennych\Lab_6\csrtm_1arc_v3.tif" rasters.dem | psql -d cw6 -h localhost -U postgres -p 5432
CREATE EXTENSION postgis_raster;

raster2pgsql.exe -s 3763 -N -32767 -t 128x128 -I -C -M -d "C:\Users\Karol\Desktop\IiAD\Semestr_7\Bazy_Danych_Przestrzennych\Lab_6\Landsat8_L1TP_RGBN.TIF" rasters.landsat8 | psql -d cw6 -h localhost -U postgres -p 5432

Przykład1


CREATE TABLE schema_name.intersects AS 
SELECT a.rast, b.municipality
FROM rasters.dem AS a, vectors.porto_parishes AS b 
WHERE ST_Intersects(a.rast, b.geom) AND b.municipality ilike 'porto';


1. dodanie serial primary key:
alter table schema_name.intersects
add column rid SERIAL PRIMARY KEY;
2. utworzenie indeksu przestrzennego:
CREATE INDEX idx_intersects_rast_gist ON schema_name.intersects
USING gist (ST_ConvexHull(rast));
3. dodanie raster constraints:
-- schema::name table_name::name raster_column::name
SELECT AddRasterConstraints('schema_name'::name, 
'intersects'::name,'rast'::name);


Przykład 2

CREATE TABLE schema_name.clip AS 
SELECT ST_Clip(a.rast, b.geom, true), b.municipality 
FROM rasters.dem AS a, vectors.porto_parishes AS b 
WHERE ST_Intersects(a.rast, b.geom) AND b.municipality like 'PORTO';

Przykład 3 

CREATE TABLE schema_name.union AS 
SELECT ST_Union(ST_Clip(a.rast, b.geom, true))
FROM rasters.dem AS a, vectors.porto_parishes AS b 
WHERE b.municipality ilike 'porto' and ST_Intersects(b.geom,a.rast);

Tworzenie rastrów z wektorów (rastrowanie)

Przykład 1

CREATE TABLE schema_name.porto_parishes AS
WITH r AS (
SELECT rast FROM rasters.dem 
LIMIT 1
)
SELECT ST_AsRaster(a.geom,r.rast,'8BUI',a.id,-32767) AS rast
FROM vectors.porto_parishes AS a, r
WHERE a.municipality ilike 'porto';

Przykład 2 

DROP TABLE schema_name.porto_parishes; --> drop table porto_parishes first
CREATE TABLE schema_name.porto_parishes AS
WITH r AS (
SELECT rast FROM rasters.dem 
LIMIT 1
)
SELECT st_union(ST_AsRaster(a.geom,r.rast,'8BUI',a.id,-32767)) AS rast
FROM vectors.porto_parishes AS a, r
WHERE a.municipality ilike 'porto';

Przykład 3

DROP TABLE schema_name.porto_parishes; --> drop table porto_parishes first
CREATE TABLE schema_name.porto_parishes AS
WITH r AS (
SELECT rast FROM rasters.dem 
LIMIT 1 )
SELECT st_tile(st_union(ST_AsRaster(a.geom,r.rast,'8BUI',a.id,-
32767)),128,128,true,-32767) AS rast
FROM vectors.porto_parishes AS a, r
WHERE a.municipality ilike 'porto';

Konwertowanie rastrów na wektory (wektoryzowanie)

Przykład 1 

create table schema_name.intersection as 
SELECT 
a.rid,(ST_Intersection(b.geom,a.rast)).geom,(ST_Intersection(b.geom,a.rast)
).val
FROM rasters.landsat8 AS a, vectors.porto_parishes AS b 
WHERE b.parish ilike 'paranhos' and ST_Intersects(b.geom,a.rast);

PRZYKLAD 2

CREATE TABLE schema_name.dumppolygons AS
SELECT 
a.rid,(ST_DumpAsPolygons(ST_Clip(a.rast,b.geom))).geom,(ST_DumpAsPolygons(ST_Clip(a.rast,b.geom))).val
FROM rasters.landsat8 AS a, vectors.porto_parishes AS b 
WHERE b.parish ilike 'paranhos' and ST_Intersects(b.geom,a.rast);

ANALIZA RASTROW

PRZYKLAD 1

CREATE TABLE schema_name.landsat_nir AS
SELECT rid, ST_Band(rast,4) AS rast
FROM rasters.landsat8;

PRZYKLAD 2

CREATE TABLE schema_name.paranhos_dem AS
SELECT a.rid,ST_Clip(a.rast, b.geom,true) as rast
FROM rasters.dem AS a, vectors.porto_parishes AS b
WHERE b.parish ilike 'paranhos' and ST_Intersects(b.geom,a.rast);


PRZYKLAD 3 

CREATE TABLE schema_name.paranhos_slope AS
SELECT a.rid,ST_Slope(a.rast,1,'32BF','PERCENTAGE') as rast
FROM schema_name.paranhos_dem AS a;

PRZYKLAD 4 

CREATE TABLE schema_name.paranhos_slope_reclass AS
SELECT a.rid,ST_Reclass(a.rast,1,']0-15]:1, (15-30]:2, (30-9999:3', 
'32BF',0)
FROM schema_name.paranhos_slope AS a;

PRZYKLAD 5 

SELECT st_summarystats(a.rast) AS stats
FROM schema_name.paranhos_dem AS a;

PRZYKLAD  6

SELECT st_summarystats(ST_Union(a.rast))
FROM schema_name.paranhos_dem AS a;

PRZYKLAD  7 

WITH t AS (
SELECT st_summarystats(ST_Union(a.rast)) AS stats
FROM schema_name.paranhos_dem AS a
)
SELECT (stats).min,(stats).max,(stats).mean FROM t;

PRZYKLAD 8 

WITH t AS (
SELECT b.parish AS parish, st_summarystats(ST_Union(ST_Clip(a.rast, 
b.geom,true))) AS stats
FROM rasters.dem AS a, vectors.porto_parishes AS b
WHERE b.municipality ilike 'porto' and ST_Intersects(b.geom,a.rast)
group by b.parish
)
SELECT parish,(stats).min,(stats).max,(stats).mean FROM t;

PRZYKLAD 9 

SELECT b.name,st_value(a.rast,(ST_Dump(b.geom)).geom)
FROM 
rasters.dem a, vectors.places AS b
WHERE ST_Intersects(a.rast,b.geom)
ORDER BY b.name;

PRZYKLAD 10 

create table schema_name.tpi30 as
select ST_TPI(a.rast,1) as rast
from rasters.dem a;

CREATE INDEX idx_tpi30_rast_gist ON schema_name.tpi30
USING gist (ST_ConvexHull(rast));

SELECT AddRasterConstraints('schema_name'::name, 
'tpi30'::name,'rast'::name);

Skrypt

create table tpi30_porto as
with porto as 
(
select geom 
from vectors.porto_parishes
where municipality ilike 'porto'
)
select ST_TPI(a.rast,1) as rast
from rasters.dem a, porto p
where ST_Intersects(a.rast, p.geom)



lynx "http://localhost:8182/cgbin/mapserv?map=/map/dem.map&mode=browse&template=openlayers&layers=all"


xdg-open "http://localhost:8182/cgbin/mapserv?map=/map/dem.map&mode=browse&template=openlayers&layers=all"




























